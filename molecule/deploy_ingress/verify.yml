---
- name: Verify
  hosts: localhost
  connection: local

  collections:
    - community.kubernetes
    
  vars:
   ansible_python_interpreter: '{{ ansible_playbook_python }}'
   cluster_name: molecule-ingress
   kind_home_dir: /tmp/kind_test
   kind_version: v0.8.1
   kind_create: True
   deploy_ingress: True
   kind_cluster_config: "kind-cluster-config.yml"

  tasks:
   - import_tasks: ../common/tasks/verify.yml

   - name: Get Ingress Deployments
     k8s_info:
        api_version: v1
        kind: Deployment
        namespace: ingress-nginx
     register: ingress_deployments
     when: deploy_ingress
   
  #  - debug: msg="{{item.status}}"
  #    with_items: 
  #     - "{{ingress_deployments.resources}}"
           
   - name: Ensure all Ingress Deployments are running
     assert:
       that: "(item.status.availableReplicas == item.status.replicas) and ((item.status.availableReplicas == item.status.readyReplicas))"
     with_items: 
      - "{{ingress_deployments.resources}}"

   - name: Create Test namespace
     k8s:
       kind: Namespace
       name: molecule-ingress-test
       state: present

   - name: Deploy Test App myApp
     k8s:
      state: present
      namespace: molecule-ingress-test
      definition: "{{lookup('file','../common/myapp/deployment.yaml')}}"        
      wait: yes
      wait_sleep: 5
      wait_timeout: 180

   - name: Deploy Test Service myApp
     k8s:
      state: present
      namespace: molecule-ingress-test
      definition: "{{lookup('file','../common/myapp/service.yaml')}}"  
       
   - name: Deploy Test Ingress myApp 
     k8s:
      state: present
      namespace: molecule-ingress-test
      definition: "{{lookup('file','../common/myapp/ingress.yaml')}}" 
      wait: yes
      wait_sleep: 5
      wait_timeout: 180

   - name: Invoke the myApp Service 
     uri:
      url: http://localhost/api/hello
      return_content: yes
     register: hello_response

   - debug: msg="{{hello_response}}"

   - name: Verify right reponse received
     assert:
       that: "'Hello World!' == hello_response.content"

- name: Destroy test resources
  import_playbook: destroy.yml