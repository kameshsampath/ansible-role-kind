---
- name: Create KinD Home Dir
  file:
    state: directory
    name: "{{ item }}"
  loop:
    - "{{ kind_home_dir }}"
    - "{{ kind_home_dir }}/{{ cluster_name }}"

- name: Check if KinD is installed
  command:
    argv:
      - kind
      - version
  register: kind_result
  ignore_errors: True
  changed_when: False

- name: Set KinD macOS download binary
  set_fact:
      kind_download_binary: "https://github.com/kubernetes-sigs/kind/releases/download/{{ kind_version }}/kind-darwin-amd64"
  when: kind_result.rc != 0 and ansible_os_family == "Darwin"

- name: Set KinD Linux download binary
  set_fact:
      kind_download_binary: "https://github.com/kubernetes-sigs/kind/releases/download/{{ kind_version }}/kind-linux-amd64"
  when: kind_result.rc != 0 and (ansible_os_family == "RedHat" or ansible_os_family == "CentOS" or ansible_os_family == "Debian")

- name: Set KinD Windows download binary
  set_fact:
      kind_download_binary: "https://github.com/kubernetes-sigs/kind/releases/download/{{ kind_version }}/kind-windows-amd64"
  when: kind_result.rc != 0 and ansible_os_family == "Windows"

- name: Create user local bin directory
  file:
    path: /usr/local/bin
    state: directory
  become: yes
  become_user: root
  when: kind_result.rc != 0

- name: Download KinD binary
  get_url:
    url: "{{ kind_download_binary }}"
    dest: "/usr/local/bin/kind"
    mode: "0755"
  become: yes
  when: kind_result.rc != 0
  register: downloaded_kind

- name: set kind binary fact
  set_fact:
    kind_binary: /usr/local/bin/kind