---
- set_fact:
    knative_manifests_dir: "/tmp/knative/{{knative_version}}"

- name: Force Deployment of Ingress
  set_fact:
    deploy_ingress: True
  when: not deploy_ingress
    
- name: Make temp directory for Knative Manifests
  file:
    path: "{{knative_manifests_dir}}"
    state: directory

- name: Get Knative Manifests
  get_url:
      dest: "{{knative_manifests_dir}}" 
      url: "{{item}}"
  delegate_to: localhost
  with_items:
    - "https://github.com/knative/serving/releases/download/{{knative_serving_version}}/serving-crds.yaml"
    - "https://github.com/knative/serving/releases/download/{{knative_serving_version}}/serving-core.yaml"
    - "https://github.com/knative/eventing/releases/download/{{knative_eventing_version}}/eventing-crds.yaml"
    - "https://github.com/knative/eventing/releases/download/{{knative_eventing_version}}/eventing.yaml"
    - "https://github.com/knative/net-kourier/releases/download/{{knative_version}}/kourier.yaml"

- name: Deploy Knative Serving
  community.kubernetes.k8s:
    definition: "{{ item.manifest | from_yaml_all | list }}"
    state: present
  loop:
      - name: serving-crds.yaml
        manifest: "{{ lookup('file',knative_manifests_dir + '/serving-crds.yaml')}}"
      - name: serving-core.yaml
        manifest: "{{ lookup('file',knative_manifests_dir + '/serving-core.yaml')}}"
  loop_control:
      label: "{{item.name}}"
  # TODO: #3 Check why controllers are configured always and fix it
  changed_when: False
  register: knative_serving_deploy  

- name: "Wait for Knative Serving::activator"
  include_tasks: utils/k8s_deployment_status.yml
  vars:
    deployment_name: activator
    deployment_namespace: knative-serving

- name: "Wait for Knative Serving::autoscaler"
  include_tasks: utils/k8s_deployment_status.yml
  vars:
    deployment_name: autoscaler
    deployment_namespace: knative-serving


- name: "Wait for Knative Serving::controller"
  include_tasks: utils/k8s_deployment_status.yml
  vars:
    deployment_name: controller
    deployment_namespace: knative-serving

- name: "Wait for Knative Serving::webhook"
  include_tasks: utils/k8s_deployment_status.yml
  vars:
    deployment_name: webhook
    deployment_namespace: knative-serving

- name: Deploy Knative Eventing
  community.kubernetes.k8s:
    definition: "{{ item.manifest | from_yaml_all | list }}"
    state: present 
  loop:
      - name: eventing-crds.yaml
        manifest: "{{ lookup('file',knative_manifests_dir + '/eventing-crds.yaml')}}"
      - name: eventing.yaml
        manifest: "{{ lookup('file',knative_manifests_dir + '/eventing.yaml')}}"
  loop_control:
      label: "{{item.name}}"
  # TODO: #3 Check why controllers are configured always and fix it
  changed_when: False
  register: knative_eventing_deploy  

- name: "Wait for Knative Eventing::eventing-controller"
  include_tasks: utils/k8s_deployment_status.yml
  vars:
    deployment_name: eventing-controller
    deployment_namespace: knative-eventing

- name: "Wait for Knative Eventing::eventing-webhook"
  include_tasks: utils/k8s_deployment_status.yml
  vars:
    deployment_name: eventing-webhook
    deployment_namespace: knative-eventing

- name: "Wait for Knative Eventing::imc-controller"
  include_tasks: utils/k8s_deployment_status.yml
  vars:
    deployment_name: imc-controller
    deployment_namespace: knative-eventing

- name: "Wait for Knative Eventing::imc-dispatcher"
  include_tasks: utils/k8s_deployment_status.yml
  vars:
    deployment_name: imc-dispatcher
    deployment_namespace: knative-eventing

- name: "Wait for Knative Eventing::mt-broker-controller"
  include_tasks: utils/k8s_deployment_status.yml
  vars:
    deployment_name: mt-broker-controller
    deployment_namespace: knative-eventing

- name: "Wait for Knative Eventing::mt-broker-filter"
  include_tasks: utils/k8s_deployment_status.yml
  vars:
    deployment_name: mt-broker-filter
    deployment_namespace: knative-eventing

- name: "Wait for Knative Eventing::mt-broker-ingress"
  include_tasks: utils/k8s_deployment_status.yml
  vars:
    deployment_name: mt-broker-ingress
    deployment_namespace: knative-eventing

- name: Deploy Knative Serving Ingress
  community.kubernetes.k8s:
    definition: "{{ item.manifest | from_yaml_all | list }}"
    state: present
  loop:
      - name: kourier.yaml
        manifest: "{{ lookup('file',knative_manifests_dir + '/kourier.yaml')}}"
  loop_control:
      label: "{{item.name}}"
  register: knative_serving_ing_deploy  

- name: "Wait for Knative Kourier::3scale-kourier-control"
  include_tasks: utils/k8s_deployment_status.yml
  vars:
    deployment_name: 3scale-kourier-control
    deployment_namespace: kourier-system

- name: "Wait for Knative Kourier::3scale-kourier-gateway"
  include_tasks: utils/k8s_deployment_status.yml
  vars:
    deployment_name: 3scale-kourier-gateway
    deployment_namespace: kourier-system

- name: Configure Knative Serving Ingress
  community.kubernetes.k8s:
    state: present
    definition: |-
      apiVersion: networking.k8s.io/v1beta1
      kind: Ingress
      metadata:
        name: kourier-ingress
        namespace: kourier-system
      spec:
        backend:
          serviceName: kourier
          servicePort: 80

# Make Knative Serving to use Kourier as Ingress
- name: Configure Kourier as Knative Ingress
  community.kubernetes.k8s:
    state: present
    namespace: knative-serving
    name: config-network
    merge_type: 
     - merge
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: config-network
        namespace: knative-serving           
      data:
        ingress.class: "kourier.ingress.networking.knative.dev"

- name: Configure Knative Serving domain 
  community.kubernetes.k8s:
    state: present
    merge_type: 
     - merge
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: config-domain
        namespace: knative-serving       
      data:
        127.0.0.1.nip.io: ""

- name: Configure Knative Serving registriesSkippingTagResolving for localhost
  community.kubernetes.k8s:
    state: present
    merge_type: 
     - merge
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: config-deployment
        namespace: knative-serving
      data:
        registriesSkippingTagResolving: "ko.local,dev.local,localhost:5000"