---
- name: Chant
  debug:
    msg: "Jai Guru!"
- name: Make sure kind config directory exists
  file:
    path: '{{kind_config_dir}}'
    state: directory
    mode: "755"
- name: Check if already exists
  docker_container_info:
    name: "{{ cluster_name + '-control-plane' }}"
  when: cluster_config is not defined
- name: Check if already exists
  docker_container_info:
    name: "{{ cluster_name + '-control-plane' }}"
  register: cluster_check_result
- name: Start KinD Registry
  docker_container:
    state: started
    image: 'registry:2'
    restart_policy: 'always'
    name: '{{container_registry_name}}'
    network_mode: kind
    exposed_ports:
      - '{{container_registry_port}}:5000'
- name: Create KinD Config
  template:
    dest: '{{kind_config_dir}}/kind-cluster-config.yaml'
    src: '{{kind_config_dir}}/kind-cluster-config.yaml.j2'
    mode: "755"
  when: cluster_config is not defined
- name: "Start KinD Cluster: '{{cluster_name}}'"
  command:
    argv:
      - kind
      - create
      - cluster
      - --name={{cluster_name}}
      - --config={{kind_config_dir}}/kind-cluster-config.yaml
  register: kind_cluster_result
  when: (cluster_config is not defined and not cluster_check_result.exists)
- name: "Get KinD Cluster: '{{cluster_name}}' Cluster Nodes"
  command:
    argv:
      - kind
      - get
      - nodes
      - --name={{cluster_name}}
  register: cluster_nodes_result
- set_fact:
    cluster_nodes: "{{ cluster_nodes_result.stdout.split('\n') }}"
- name: "Label KinD Cluster: '{{cluster_name}}' Cluster Nodes"
  k8s:
    state: present
    resource_definition:
      api_version: v1
      kind: Node
      metadata:
        annotations:
          tilt.dev/registry: 'localhost:{{container_registry_port}}'
          tilt.dev/registry-from-cluster: '{{container_registry_name}}:{{container_registry_port}}'
        name: '{{item}}'
  loop: '{{cluster_nodes}}'
  when: kind_cluster_result is defined

- name: Search for all worker nodes
  k8s_info:
    kind: Node
    label_selectors:
      - '!node-role.kubernetes.io/master'
  register: worker_nodes

- name: "Label KinD Cluster '{{cluster_name}}' Worker Nodes"
  k8s:
    state: present
    resource_definition:
      api_version: v1
      kind: Node
      metadata:
        labels:
          node-role.kubernetes.io/worker: ''
        name: '{{item}}'
  loop: "{{ worker_nodes | json_query('resources[*].metadata.name') }}"
###################################
# Nginx Ingress
###################################
- include: ingress.yml
  when: ingress 