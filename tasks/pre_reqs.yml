---
- name: Install essential python packages
  pip:
    state: latest
    name: '{{item}}'
  loop:
    - openshift
    - jmespath

- name: Create KinD Home Dir
  file:
    state: directory 
    name: "{{item}}"
  loop:
    - "{{kind_home_dir}}"
    - "{{kind_home_dir}}/bin"
    - "{{kind_home_dir}}/{{cluster_name}}"

- name: Check if KinD is installed
  command:
    argv:
      - kind
      - version
  register: kind_result
  ignore_errors: True
  changed_when: False

- name: Set KinD macOS download binary
  set_fact:
      kind_download_binary: "https://github.com/kubernetes-sigs/kind/releases/download/{{kind_version}}/kind-darwin-amd64"
  when: kind_result.rc != 0 and ansible_os_family == "Darwin"

- name: Set KinD Linux download binary
  set_fact:
      kind_download_binary: "https://github.com/kubernetes-sigs/kind/releases/download/{{kind_version}}/kind-linux-amd64"
  when: kind_result.rc != 0 and (ansible_os_family == "RedHat" or ansible_os_family == "CentOS" or ansible_os_family == "Debian")

- name: Set KinD Windows download binary
  set_fact:
      kind_download_binary: "https://github.com/kubernetes-sigs/kind/releases/download/{{kind_version}}/kind-windows-amd64"
  when: kind_result.rc != 0 and ansible_os_family == "Windows"

- name: Download KinD binary
  get_url:
    url: "{{kind_download_binary}}"
    dest: "{{kind_home_dir}}/bin/kind"
    mode: "0755"
  when: kind_result.rc != 0
  register: downloaded_kind

- name: Add KinD bin dir to linux system-wide '$PATH'
  copy:
    dest: /etc/profile.d/kind-path.sh
    content: 'export PATH={{kind_home_dir}}/bin:$PATH'
  when: (ansible_os_family == "RedHat" or ansible_os_family == "CentOS" or ansible_os_family == "Debian") and (downloaded_kind is defined and not downloaded_kind.failed) 

- name: Add KinD bin dir to Windows/macOS '$PATH'
  debug:
     msg: "To be able to use kind, add {{kind_home_dir}}/bin to your PATH"
  when: (ansible_os_family == "Darwin" or  ansible_os_family == "Windows") and downloaded_kind is not defined